<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="773"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="773"> </text>
<g id="frames">
<g>
<title>all (145 samples, 100.00%)</title><rect x="10.0" y="739.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="750.0">all</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.run (34 samples, 23.45%)</title><rect x="10.0" y="723.0" width="276.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="734.0">com/linecorp/decaton/processor/runtim..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.commitOffsetsIfNecessary (1 samples, 0.69%)</title><rect x="10.0" y="707.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.pollOnce (32 samples, 22.07%)</title><rect x="18.1" y="707.0" width="260.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.1" y="718.0">com/linecorp/decaton/processor/runt..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.pausePartitions (2 samples, 1.38%)</title><rect x="18.1" y="691.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.1" y="702.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionContexts.partitionsNeedsPause (2 samples, 1.38%)</title><rect x="18.1" y="675.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.1" y="686.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.69%)</title><rect x="18.1" y="659.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.69%)</title><rect x="18.1" y="643.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.69%)</title><rect x="18.1" y="627.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.1" y="638.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.69%)</title><rect x="18.1" y="611.0" width="8.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="21.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.69%)</title><rect x="26.3" y="659.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (1 samples, 0.69%)</title><rect x="26.3" y="643.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.3" y="654.0"></text>
</g>
<g>
<title>io/micrometer/core/instrument/composite/CompositeTimer.record (1 samples, 0.69%)</title><rect x="34.4" y="691.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.4" y="702.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (16 samples, 11.03%)</title><rect x="42.6" y="691.0" width="130.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.6" y="702.0">java/lang/Iterab..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription$$Lambda$263/1612081961.accept (11 samples, 7.59%)</title><rect x="42.6" y="675.0" width="89.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.6" y="686.0">com/lineco..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.lambda$pollOnce$0 (11 samples, 7.59%)</title><rect x="42.6" y="659.0" width="89.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.6" y="670.0">com/lineco..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionContext.addRequest (9 samples, 6.21%)</title><rect x="42.6" y="643.0" width="73.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.6" y="654.0">com/line..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionProcessor.addTask (9 samples, 6.21%)</title><rect x="42.6" y="627.0" width="73.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.6" y="638.0">com/line..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorUnit.putTask (9 samples, 6.21%)</title><rect x="42.6" y="611.0" width="73.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.6" y="622.0">com/line..</text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (9 samples, 6.21%)</title><rect x="42.6" y="595.0" width="73.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.6" y="606.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 6.21%)</title><rect x="42.6" y="579.0" width="73.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.6" y="590.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 6.21%)</title><rect x="42.6" y="563.0" width="73.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.6" y="574.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 4.14%)</title><rect x="42.6" y="547.0" width="48.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.6" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 4.14%)</title><rect x="42.6" y="531.0" width="48.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.6" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 4.14%)</title><rect x="42.6" y="515.0" width="48.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.6" y="526.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 4.14%)</title><rect x="42.6" y="499.0" width="48.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.6" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 4.14%)</title><rect x="42.6" y="483.0" width="48.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="45.6" y="494.0">java..</text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (6 samples, 4.14%)</title><rect x="42.6" y="467.0" width="48.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="45.6" y="478.0">sun/..</text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 3.45%)</title><rect x="42.6" y="451.0" width="40.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="45.6" y="462.0">Uns..</text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 2.07%)</title><rect x="42.6" y="435.0" width="24.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="45.6" y="446.0">_..</text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 1.38%)</title><rect x="67.0" y="435.0" width="16.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="70.0" y="446.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.69%)</title><rect x="83.2" y="451.0" width="8.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="86.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.69%)</title><rect x="91.4" y="547.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="94.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.69%)</title><rect x="91.4" y="531.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.69%)</title><rect x="91.4" y="515.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 1.38%)</title><rect x="99.5" y="547.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 1.38%)</title><rect x="99.5" y="531.0" width="16.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 1.38%)</title><rect x="99.5" y="515.0" width="16.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.5" y="526.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/TaskRequest.&lt;init&gt; (2 samples, 1.38%)</title><rect x="115.8" y="643.0" width="16.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.8" y="654.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 1.38%)</title><rect x="115.8" y="627.0" width="16.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.8" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.69%)</title><rect x="123.9" y="611.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="126.9" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.69%)</title><rect x="123.9" y="595.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.9" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.69%)</title><rect x="123.9" y="579.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="126.9" y="590.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.69%)</title><rect x="132.1" y="675.0" width="8.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="135.1" y="686.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/ConsumerRecords.iterator (1 samples, 0.69%)</title><rect x="140.2" y="675.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.2" y="686.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/AbstractIterator.hasNext (3 samples, 2.07%)</title><rect x="148.3" y="675.0" width="24.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.3" y="686.0">o..</text>
</g>
<g>
<title>org/apache/kafka/common/utils/AbstractIterator.maybeComputeNext (3 samples, 2.07%)</title><rect x="148.3" y="659.0" width="24.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.3" y="670.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/ConsumerRecords$ConcatenatedIterable$1.makeNext (3 samples, 2.07%)</title><rect x="148.3" y="643.0" width="24.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.3" y="654.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/ConsumerRecords$ConcatenatedIterable$1.makeNext (3 samples, 2.07%)</title><rect x="148.3" y="627.0" width="24.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.3" y="638.0">o..</text>
</g>
<g>
<title>java/util/HashMap$ValueIterator.next (3 samples, 2.07%)</title><rect x="148.3" y="611.0" width="24.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.3" y="622.0">j..</text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (3 samples, 2.07%)</title><rect x="148.3" y="595.0" width="24.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.3" y="606.0">j..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (13 samples, 8.97%)</title><rect x="172.8" y="691.0" width="105.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.8" y="702.0">org/apache/ka..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (13 samples, 8.97%)</title><rect x="172.8" y="675.0" width="105.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.8" y="686.0">org/apache/ka..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.pollForFetches (7 samples, 4.83%)</title><rect x="172.8" y="659.0" width="56.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.8" y="670.0">org/ap..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.timeToNextPoll (1 samples, 0.69%)</title><rect x="172.8" y="643.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.8" y="654.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/AbstractCoordinator.timeToNextHeartbeat (1 samples, 0.69%)</title><rect x="172.8" y="627.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.8" y="638.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Heartbeat.timeToNextHeartbeat (1 samples, 0.69%)</title><rect x="172.8" y="611.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.8" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Heartbeat.update (1 samples, 0.69%)</title><rect x="172.8" y="595.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="175.8" y="606.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchedRecords (6 samples, 4.14%)</title><rect x="180.9" y="643.0" width="48.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.9" y="654.0">org/..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchRecords (6 samples, 4.14%)</title><rect x="180.9" y="627.0" width="48.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.9" y="638.0">org/..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.access$1700 (4 samples, 2.76%)</title><rect x="180.9" y="611.0" width="32.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.9" y="622.0">or..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.fetchRecords (4 samples, 2.76%)</title><rect x="180.9" y="595.0" width="32.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.9" y="606.0">or..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.nextFetchedRecord (1 samples, 0.69%)</title><rect x="180.9" y="579.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="183.9" y="590.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.maybeEnsureValid (1 samples, 0.69%)</title><rect x="180.9" y="563.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.9" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.ensureValid (1 samples, 0.69%)</title><rect x="180.9" y="547.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.9" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.isValid (1 samples, 0.69%)</title><rect x="180.9" y="531.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.9" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.computeChecksum (1 samples, 0.69%)</title><rect x="180.9" y="515.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.9" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Crc32C.compute (1 samples, 0.69%)</title><rect x="180.9" y="499.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.9" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Checksums.update (1 samples, 0.69%)</title><rect x="180.9" y="483.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.9" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/PureJavaCrc32C.update (1 samples, 0.69%)</title><rect x="180.9" y="467.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.9" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.access$3500 (3 samples, 2.07%)</title><rect x="189.0" y="579.0" width="24.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="192.0" y="590.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.parseRecord (3 samples, 2.07%)</title><rect x="189.0" y="563.0" width="24.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.0" y="574.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.maybeLeaderEpoch (2 samples, 1.38%)</title><rect x="189.0" y="547.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.0" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 1.38%)</title><rect x="189.0" y="531.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.0" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/common/header/internals/RecordHeaders.&lt;init&gt; (1 samples, 0.69%)</title><rect x="205.3" y="547.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.69%)</title><rect x="205.3" y="531.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.3" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$FetchManagerMetrics.access$1900 (2 samples, 1.38%)</title><rect x="213.4" y="611.0" width="16.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.4" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$FetchManagerMetrics.recordPartitionLag (1 samples, 0.69%)</title><rect x="213.4" y="595.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.4" y="606.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.69%)</title><rect x="213.4" y="579.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.4" y="590.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.69%)</title><rect x="213.4" y="563.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.4" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.69%)</title><rect x="213.4" y="547.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.4" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.checkQuotas (1 samples, 0.69%)</title><rect x="213.4" y="531.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.4" y="542.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.69%)</title><rect x="213.4" y="515.0" width="8.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="216.4" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.partitionLag (1 samples, 0.69%)</title><rect x="221.6" y="595.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.6" y="606.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.updateAssignmentMetadataIfNeeded (3 samples, 2.07%)</title><rect x="229.7" y="659.0" width="24.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.7" y="670.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.updateFetchPositions (3 samples, 2.07%)</title><rect x="229.7" y="643.0" width="24.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="232.7" y="654.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.validateOffsetsIfNeeded (2 samples, 1.38%)</title><rect x="229.7" y="627.0" width="16.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="232.7" y="638.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.validateOffsetsAsync (1 samples, 0.69%)</title><rect x="229.7" y="611.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.7" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.regroupFetchPositionsByLeader (1 samples, 0.69%)</title><rect x="229.7" y="595.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.7" y="606.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.partitionsNeedingValidation (1 samples, 0.69%)</title><rect x="237.9" y="611.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.9" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.collectPartitions (1 samples, 0.69%)</title><rect x="237.9" y="595.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="240.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.69%)</title><rect x="237.9" y="579.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="240.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.69%)</title><rect x="237.9" y="563.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.69%)</title><rect x="237.9" y="547.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.69%)</title><rect x="237.9" y="531.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.69%)</title><rect x="237.9" y="515.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.9" y="526.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.forEachRemaining (1 samples, 0.69%)</title><rect x="237.9" y="499.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.9" y="510.0"></text>
</g>
<g>
<title>java/util/Iterator.forEachRemaining (1 samples, 0.69%)</title><rect x="237.9" y="483.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.69%)</title><rect x="237.9" y="467.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.69%)</title><rect x="237.9" y="451.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.69%)</title><rect x="237.9" y="435.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.9" y="446.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.69%)</title><rect x="237.9" y="419.0" width="8.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="240.9" y="430.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.hasAllFetchPositions (1 samples, 0.69%)</title><rect x="246.0" y="627.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.allMatch (1 samples, 0.69%)</title><rect x="246.0" y="611.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.0" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.transmitSends (1 samples, 0.69%)</title><rect x="254.1" y="659.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.1" y="670.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (1 samples, 0.69%)</title><rect x="254.1" y="643.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="257.1" y="654.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.poll (1 samples, 0.69%)</title><rect x="254.1" y="627.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.1" y="638.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.pollSelectionKeys (1 samples, 0.69%)</title><rect x="254.1" y="611.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.1" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.attemptRead (1 samples, 0.69%)</title><rect x="254.1" y="595.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.1" y="606.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/KafkaChannel.read (1 samples, 0.69%)</title><rect x="254.1" y="579.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.1" y="590.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/KafkaChannel.receive (1 samples, 0.69%)</title><rect x="254.1" y="563.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.1" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/NetworkReceive.readFrom (1 samples, 0.69%)</title><rect x="254.1" y="547.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="257.1" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/PlaintextTransportLayer.read (1 samples, 0.69%)</title><rect x="254.1" y="531.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="257.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (1 samples, 0.69%)</title><rect x="254.1" y="515.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.69%)</title><rect x="254.1" y="499.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="257.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.69%)</title><rect x="254.1" y="483.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.1" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.69%)</title><rect x="254.1" y="467.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.1" y="478.0"></text>
</g>
<g>
<title>java/nio/Bits.copyToArray (1 samples, 0.69%)</title><rect x="254.1" y="451.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.1" y="462.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.sendFetches (1 samples, 0.69%)</title><rect x="262.3" y="659.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="265.3" y="670.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.prepareFetchRequests (1 samples, 0.69%)</title><rect x="262.3" y="643.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="265.3" y="654.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.69%)</title><rect x="262.3" y="627.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="265.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.69%)</title><rect x="262.3" y="611.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="265.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.69%)</title><rect x="262.3" y="595.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="265.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.69%)</title><rect x="262.3" y="579.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="265.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.69%)</title><rect x="262.3" y="563.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.3" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/KafkaConsumerMetrics.recordPollStart (1 samples, 0.69%)</title><rect x="270.4" y="659.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.4" y="670.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.69%)</title><rect x="270.4" y="643.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.4" y="654.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.69%)</title><rect x="270.4" y="627.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.4" y="638.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.69%)</title><rect x="270.4" y="611.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="273.4" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/SampledStat.record (1 samples, 0.69%)</title><rect x="270.4" y="595.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.4" y="606.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/Utils$Timer.duration (1 samples, 0.69%)</title><rect x="278.6" y="707.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.6" y="718.0"></text>
</g>
<g>
<title>java/time/Duration.ofNanos (1 samples, 0.69%)</title><rect x="278.6" y="691.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="281.6" y="702.0"></text>
</g>
<g>
<title>java/time/Duration.create (1 samples, 0.69%)</title><rect x="278.6" y="675.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.6" y="686.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.69%)</title><rect x="278.6" y="659.0" width="8.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="281.6" y="670.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.69%)</title><rect x="278.6" y="643.0" width="8.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="281.6" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.run (64 samples, 44.14%)</title><rect x="286.7" y="723.0" width="520.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.7" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (64 samples, 44.14%)</title><rect x="286.7" y="707.0" width="520.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.7" y="718.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (64 samples, 44.14%)</title><rect x="286.7" y="691.0" width="520.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.7" y="702.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorUnit$$Lambda$277/2038354488.run (39 samples, 26.90%)</title><rect x="294.8" y="675.0" width="317.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.8" y="686.0">com/linecorp/decaton/processor/runtime/Proc..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorUnit.lambda$putTask$0 (39 samples, 26.90%)</title><rect x="294.8" y="659.0" width="317.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.8" y="670.0">com/linecorp/decaton/processor/runtime/Proc..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorUnit.processTask (39 samples, 26.90%)</title><rect x="294.8" y="643.0" width="317.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="297.8" y="654.0">com/linecorp/decaton/processor/runtime/Proc..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.scheduleThenProcess (39 samples, 26.90%)</title><rect x="294.8" y="627.0" width="317.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="297.8" y="638.0">com/linecorp/decaton/processor/runtime/Proc..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/base/ParserBase.close (1 samples, 0.69%)</title><rect x="294.8" y="611.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="297.8" y="622.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.extract (12 samples, 8.28%)</title><rect x="303.0" y="611.0" width="97.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.0" y="622.0">com/linecor..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner$$Lambda$41/1384010761.extract (12 samples, 8.28%)</title><rect x="303.0" y="595.0" width="97.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.0" y="606.0">com/linecor..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner.lambda$init$0 (12 samples, 8.28%)</title><rect x="303.0" y="579.0" width="97.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.0" y="590.0">com/linecor..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (12 samples, 8.28%)</title><rect x="303.0" y="563.0" width="97.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.0" y="574.0">com/linecor..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (12 samples, 8.28%)</title><rect x="303.0" y="547.0" width="97.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.0" y="558.0">com/linecor..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.readValue (12 samples, 8.28%)</title><rect x="303.0" y="531.0" width="97.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.0" y="542.0">com/fasterx..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.createParser (3 samples, 2.07%)</title><rect x="303.0" y="515.0" width="24.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.0" y="526.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createContext (1 samples, 0.69%)</title><rect x="311.1" y="499.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="314.1" y="510.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._getBufferRecycler (1 samples, 0.69%)</title><rect x="311.1" y="483.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.1" y="494.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createParser (1 samples, 0.69%)</title><rect x="319.2" y="499.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="322.2" y="510.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._readMapAndClose (8 samples, 5.52%)</title><rect x="327.4" y="515.0" width="65.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.4" y="526.0">com/fas..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._initForReading (1 samples, 0.69%)</title><rect x="327.4" y="499.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.4" y="510.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (1 samples, 0.69%)</title><rect x="327.4" y="483.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.4" y="494.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nextTokenNotInObject (1 samples, 0.69%)</title><rect x="327.4" y="467.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.4" y="478.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonReadContext.createChildObjectContext (1 samples, 0.69%)</title><rect x="327.4" y="451.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.4" y="462.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonReadContext.&lt;init&gt; (1 samples, 0.69%)</title><rect x="327.4" y="435.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.4" y="446.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserialize (7 samples, 4.83%)</title><rect x="335.5" y="499.0" width="57.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.5" y="510.0">com/fa..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (2 samples, 1.38%)</title><rect x="335.5" y="483.0" width="16.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.5" y="494.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserializeFromObject (5 samples, 3.45%)</title><rect x="351.8" y="483.0" width="40.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="354.8" y="494.0">com..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializerBase.deserializeFromObjectUsingNonDefault (5 samples, 3.45%)</title><rect x="351.8" y="467.0" width="40.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.8" y="478.0">com..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeUsingPropertyBased (5 samples, 3.45%)</title><rect x="351.8" y="451.0" width="40.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="354.8" y="462.0">com..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (3 samples, 2.07%)</title><rect x="351.8" y="435.0" width="24.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="354.8" y="446.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseName (1 samples, 0.69%)</title><rect x="351.8" y="419.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="354.8" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName (1 samples, 0.69%)</title><rect x="351.8" y="403.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="354.8" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName2 (1 samples, 0.69%)</title><rect x="351.8" y="387.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="354.8" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseLongName (1 samples, 0.69%)</title><rect x="351.8" y="371.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="354.8" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.findName (1 samples, 0.69%)</title><rect x="351.8" y="355.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.8" y="366.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipColon (2 samples, 1.38%)</title><rect x="359.9" y="419.0" width="16.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.9" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipColon2 (2 samples, 1.38%)</title><rect x="359.9" y="403.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.9" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseLongName (2 samples, 1.38%)</title><rect x="359.9" y="387.0" width="16.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.9" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.build (1 samples, 0.69%)</title><rect x="376.2" y="435.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="379.2" y="446.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/ValueInstantiator.createFromObjectWith (1 samples, 0.69%)</title><rect x="376.2" y="419.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.2" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.createFromObjectWith (1 samples, 0.69%)</title><rect x="376.2" y="403.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.2" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedConstructor.call (1 samples, 0.69%)</title><rect x="376.2" y="387.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.2" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.69%)</title><rect x="376.2" y="371.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="379.2" y="382.0"></text>
</g>
<g>
<title>sun/reflect/GeneratedConstructorAccessor24.newInstance (1 samples, 0.69%)</title><rect x="376.2" y="355.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="379.2" y="366.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.startBuilding (1 samples, 0.69%)</title><rect x="384.3" y="435.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.3" y="446.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory.constructType (1 samples, 0.69%)</title><rect x="392.5" y="515.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.5" y="526.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromAny (1 samples, 0.69%)</title><rect x="392.5" y="499.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.5" y="510.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromClass (1 samples, 0.69%)</title><rect x="392.5" y="483.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.5" y="494.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/LRUMap.get (1 samples, 0.69%)</title><rect x="392.5" y="467.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="395.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.69%)</title><rect x="392.5" y="451.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.5" y="462.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.process (25 samples, 17.24%)</title><rect x="400.6" y="611.0" width="203.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="403.6" y="622.0">com/linecorp/decaton/proces..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/LoggingContext.close (4 samples, 2.76%)</title><rect x="400.6" y="595.0" width="32.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="403.6" y="606.0">co..</text>
</g>
<g>
<title>org/slf4j/MDC.remove (4 samples, 2.76%)</title><rect x="400.6" y="579.0" width="32.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="403.6" y="590.0">or..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.remove (4 samples, 2.76%)</title><rect x="400.6" y="563.0" width="32.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="403.6" y="574.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getAndSetLastOperation (1 samples, 0.69%)</title><rect x="400.6" y="547.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="403.6" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.69%)</title><rect x="400.6" y="531.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.6" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (1 samples, 0.69%)</title><rect x="400.6" y="515.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="403.6" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.69%)</title><rect x="408.8" y="547.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.8" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.69%)</title><rect x="408.8" y="531.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.8" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.69%)</title><rect x="408.8" y="515.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.8" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.remove (2 samples, 1.38%)</title><rect x="416.9" y="547.0" width="16.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.9" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.remove (2 samples, 1.38%)</title><rect x="416.9" y="531.0" width="16.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.69%)</title><rect x="416.9" y="515.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="419.9" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.removeNode (1 samples, 0.69%)</title><rect x="425.0" y="515.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.0" y="526.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessingContextImpl.loggingContext (15 samples, 10.34%)</title><rect x="433.2" y="595.0" width="122.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="436.2" y="606.0">com/linecorp/de..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/LoggingContext.&lt;init&gt; (15 samples, 10.34%)</title><rect x="433.2" y="579.0" width="122.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.2" y="590.0">com/linecorp/de..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/TaskMetadata.toString (8 samples, 5.52%)</title><rect x="449.4" y="563.0" width="65.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="452.4" y="574.0">com/lin..</text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.69%)</title><rect x="490.1" y="547.0" width="8.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="493.1" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.69%)</title><rect x="490.1" y="531.0" width="8.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="493.1" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.69%)</title><rect x="490.1" y="515.0" width="8.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="493.1" y="526.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.69%)</title><rect x="490.1" y="499.0" width="8.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="493.1" y="510.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.69%)</title><rect x="490.1" y="483.0" width="8.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="493.1" y="494.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.69%)</title><rect x="490.1" y="467.0" width="8.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="493.1" y="478.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(methodHandle&amp;, KlassHandle&amp;, Bytecodes::Code, constantPoolHandle, int, Thread*) (1 samples, 0.69%)</title><rect x="490.1" y="451.0" width="8.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="493.1" y="462.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.69%)</title><rect x="490.1" y="435.0" width="8.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="493.1" y="446.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, char const*, Thread*) (1 samples, 0.69%)</title><rect x="490.1" y="419.0" width="8.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="493.1" y="430.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.69%)</title><rect x="490.1" y="403.0" width="8.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="493.1" y="414.0"></text>
</g>
<g>
<title>SystemDictionary::add_loader_constraint(Symbol*, Handle, Handle, Thread*) (1 samples, 0.69%)</title><rect x="490.1" y="387.0" width="8.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="493.1" y="398.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.69%)</title><rect x="490.1" y="371.0" width="8.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="493.1" y="382.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.69%)</title><rect x="490.1" y="355.0" width="8.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="493.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.69%)</title><rect x="498.3" y="547.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.3" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.69%)</title><rect x="498.3" y="531.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.3" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.69%)</title><rect x="498.3" y="515.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.69%)</title><rect x="498.3" y="499.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.69%)</title><rect x="498.3" y="483.0" width="8.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="501.3" y="494.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.69%)</title><rect x="498.3" y="467.0" width="8.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="501.3" y="478.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.69%)</title><rect x="506.4" y="547.0" width="8.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="509.4" y="558.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.69%)</title><rect x="514.6" y="563.0" width="8.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="517.6" y="574.0"></text>
</g>
<g>
<title>org/slf4j/MDC.put (4 samples, 2.76%)</title><rect x="522.7" y="563.0" width="32.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="525.7" y="574.0">or..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.put (4 samples, 2.76%)</title><rect x="522.7" y="547.0" width="32.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.7" y="558.0">ch..</text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.put (4 samples, 2.76%)</title><rect x="522.7" y="531.0" width="32.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="525.7" y="542.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 2.07%)</title><rect x="530.8" y="515.0" width="24.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.8" y="526.0">j..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.69%)</title><rect x="530.8" y="499.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.8" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.69%)</title><rect x="539.0" y="499.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="542.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.69%)</title><rect x="539.0" y="483.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="542.0" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.69%)</title><rect x="547.1" y="499.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.1" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.69%)</title><rect x="547.1" y="483.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="550.1" y="494.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessingContextImpl.push (5 samples, 3.45%)</title><rect x="555.2" y="595.0" width="40.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="558.2" y="606.0">com..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessingContextImpl.pushDownStream (5 samples, 3.45%)</title><rect x="555.2" y="579.0" width="40.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.2" y="590.0">com..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner$$Lambda$203/117397272.process (2 samples, 1.38%)</title><rect x="555.2" y="563.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.2" y="574.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner.lambda$null$1 (2 samples, 1.38%)</title><rect x="555.2" y="547.0" width="16.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.2" y="558.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording.process (2 samples, 1.38%)</title><rect x="555.2" y="531.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="558.2" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.69%)</title><rect x="555.2" y="515.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.2" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.69%)</title><rect x="555.2" y="499.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.2" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callTurboFilters (1 samples, 0.69%)</title><rect x="555.2" y="483.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.2" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_0_3OrMore (1 samples, 0.69%)</title><rect x="555.2" y="467.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.size (1 samples, 0.69%)</title><rect x="555.2" y="451.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.getArray (1 samples, 0.69%)</title><rect x="555.2" y="435.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.2" y="446.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording$ChildRecording.process (1 samples, 0.69%)</title><rect x="563.4" y="515.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="566.4" y="526.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.69%)</title><rect x="563.4" y="499.0" width="8.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="566.4" y="510.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.69%)</title><rect x="563.4" y="483.0" width="8.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="566.4" y="494.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessingContextImpl.&lt;init&gt; (1 samples, 0.69%)</title><rect x="571.5" y="563.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.5" y="574.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (1 samples, 0.69%)</title><rect x="571.5" y="547.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/453523494.linkToTargetMethod (1 samples, 0.69%)</title><rect x="579.7" y="563.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="582.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/55331187.invokeStatic_L_L (1 samples, 0.69%)</title><rect x="579.7" y="547.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.7" y="558.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessingContextImpl$$Lambda$280/97786441.get$Lambda (1 samples, 0.69%)</title><rect x="579.7" y="531.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.7" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.remove (1 samples, 0.69%)</title><rect x="579.7" y="515.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.7" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (1 samples, 0.69%)</title><rect x="587.8" y="563.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="590.8" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (1 samples, 0.69%)</title><rect x="587.8" y="547.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="590.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.size (1 samples, 0.69%)</title><rect x="587.8" y="531.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="590.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.69%)</title><rect x="595.9" y="595.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="598.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.69%)</title><rect x="595.9" y="579.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.69%)</title><rect x="595.9" y="563.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="598.9" y="574.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline$$Lambda$283/567076756.accept (1 samples, 0.69%)</title><rect x="595.9" y="547.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="598.9" y="558.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.lambda$process$1 (1 samples, 0.69%)</title><rect x="595.9" y="531.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.9" y="542.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/Utils$Timer.duration (1 samples, 0.69%)</title><rect x="595.9" y="515.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.9" y="526.0"></text>
</g>
<g>
<title>java/time/Duration.ofNanos (1 samples, 0.69%)</title><rect x="595.9" y="499.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.9" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.create (1 samples, 0.69%)</title><rect x="595.9" y="483.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="598.9" y="494.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.69%)</title><rect x="604.1" y="611.0" width="8.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="607.1" y="622.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.69%)</title><rect x="604.1" y="595.0" width="8.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="607.1" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 1.38%)</title><rect x="612.2" y="675.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="615.2" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.69%)</title><rect x="620.3" y="659.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="623.3" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) [clone .constprop.273] (1 samples, 0.69%)</title><rect x="620.3" y="643.0" width="8.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="623.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (3 samples, 2.07%)</title><rect x="628.5" y="675.0" width="24.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.5" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 2.07%)</title><rect x="628.5" y="659.0" width="24.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.5" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (2 samples, 1.38%)</title><rect x="636.6" y="643.0" width="16.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.69%)</title><rect x="644.8" y="627.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="647.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (19 samples, 13.10%)</title><rect x="652.9" y="675.0" width="154.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.9" y="686.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (19 samples, 13.10%)</title><rect x="652.9" y="659.0" width="154.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.9" y="670.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (16 samples, 11.03%)</title><rect x="652.9" y="643.0" width="130.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="655.9" y="654.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (16 samples, 11.03%)</title><rect x="652.9" y="627.0" width="130.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="655.9" y="638.0">java/util/concur..</text>
</g>
<g>
<title>sun/misc/Unsafe.park (15 samples, 10.34%)</title><rect x="661.0" y="611.0" width="122.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.0" y="622.0">sun/misc/Unsafe..</text>
</g>
<g>
<title>Unsafe_Park (14 samples, 9.66%)</title><rect x="669.2" y="595.0" width="113.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="672.2" y="606.0">Unsafe_Park</text>
</g>
<g>
<title>BarrierSet::read_barrier(oopDesc*) (1 samples, 0.69%)</title><rect x="669.2" y="579.0" width="8.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="672.2" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 1.38%)</title><rect x="677.3" y="579.0" width="16.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="680.3" y="590.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.69%)</title><rect x="685.4" y="563.0" width="8.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="688.4" y="574.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 2.07%)</title><rect x="693.6" y="579.0" width="24.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="696.6" y="590.0">_..</text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 5.52%)</title><rect x="718.0" y="579.0" width="65.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="721.0" y="590.0">__pthre..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 2.07%)</title><rect x="783.1" y="643.0" width="24.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="786.1" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 2.07%)</title><rect x="783.1" y="627.0" width="24.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.1" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 2.07%)</title><rect x="783.1" y="611.0" width="24.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.1" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 2.07%)</title><rect x="783.1" y="595.0" width="24.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.1" y="606.0">j..</text>
</g>
<g>
<title>start_thread (47 samples, 32.41%)</title><rect x="807.5" y="723.0" width="382.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="810.5" y="734.0">start_thread</text>
</g>
<g>
<title>java_start(Thread*) (47 samples, 32.41%)</title><rect x="807.5" y="707.0" width="382.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="810.5" y="718.0">java_start(Thread*)</text>
</g>
<g>
<title>GangWorker::loop() (13 samples, 8.97%)</title><rect x="807.5" y="691.0" width="105.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="810.5" y="702.0">GangWorker::l..</text>
</g>
<g>
<title>G1ParPreserveCMReferentsTask::work(unsigned int) (3 samples, 2.07%)</title><rect x="807.5" y="675.0" width="24.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="810.5" y="686.0">G..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 2.07%)</title><rect x="807.5" y="659.0" width="24.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="810.5" y="670.0">G..</text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.69%)</title><rect x="807.5" y="643.0" width="8.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="810.5" y="654.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 1.38%)</title><rect x="815.7" y="643.0" width="16.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="818.7" y="654.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) [clone .part.431] (10 samples, 6.90%)</title><rect x="831.9" y="675.0" width="81.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="834.9" y="686.0">G1ParTask..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (8 samples, 5.52%)</title><rect x="831.9" y="659.0" width="65.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="834.9" y="670.0">G1ParEv..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (5 samples, 3.45%)</title><rect x="831.9" y="643.0" width="40.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="834.9" y="654.0">G1P..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 1.38%)</title><rect x="856.3" y="627.0" width="16.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="859.3" y="638.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_oop_iterate_v(oopDesc*, ExtendedOopClosure*) (1 samples, 0.69%)</title><rect x="864.5" y="611.0" width="8.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="867.5" y="622.0"></text>
</g>
<g>
<title>G1ParScanClosure::do_oop(unsigned int*) (1 samples, 0.69%)</title><rect x="864.5" y="595.0" width="8.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="867.5" y="606.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (2 samples, 1.38%)</title><rect x="872.6" y="643.0" width="16.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="875.6" y="654.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.69%)</title><rect x="888.9" y="643.0" width="8.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="891.9" y="654.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(OopClosure*, OopClosure*, CLDClosure*, CLDClosure*, bool, unsigned int) (1 samples, 0.69%)</title><rect x="897.0" y="659.0" width="8.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="900.0" y="670.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.69%)</title><rect x="897.0" y="643.0" width="8.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="900.0" y="654.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (1 samples, 0.69%)</title><rect x="897.0" y="627.0" width="8.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="900.0" y="638.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.69%)</title><rect x="897.0" y="611.0" width="8.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="900.0" y="622.0"></text>
</g>
<g>
<title>__memcpy_ssse3_back (1 samples, 0.69%)</title><rect x="897.0" y="595.0" width="8.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="900.0" y="606.0"></text>
</g>
<g>
<title>G1RootProcessor::scan_remembered_sets(G1ParPushHeapRSClosure*, OopClosure*, unsigned int) (1 samples, 0.69%)</title><rect x="905.2" y="659.0" width="8.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="908.2" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParPushHeapRSClosure*, CodeBlobClosure*, unsigned int) (1 samples, 0.69%)</title><rect x="905.2" y="643.0" width="8.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="908.2" y="654.0"></text>
</g>
<g>
<title>G1RemSet::scanRS(G1ParPushHeapRSClosure*, CodeBlobClosure*, unsigned int) (1 samples, 0.69%)</title><rect x="905.2" y="627.0" width="8.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="908.2" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::collection_set_iterate_from(HeapRegion*, HeapRegionClosure*) (1 samples, 0.69%)</title><rect x="905.2" y="611.0" width="8.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="908.2" y="622.0"></text>
</g>
<g>
<title>ScanRSClosure::doHeapRegion(HeapRegion*) (1 samples, 0.69%)</title><rect x="905.2" y="595.0" width="8.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="908.2" y="606.0"></text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (1 samples, 0.69%)</title><rect x="905.2" y="579.0" width="8.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="908.2" y="590.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.69%)</title><rect x="905.2" y="563.0" width="8.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="908.2" y="574.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (34 samples, 23.45%)</title><rect x="913.3" y="691.0" width="276.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="916.3" y="702.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (34 samples, 23.45%)</title><rect x="913.3" y="675.0" width="276.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="916.3" y="686.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (34 samples, 23.45%)</title><rect x="913.3" y="659.0" width="276.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="916.3" y="670.0">CompileBroker::invoke_compiler_on_met..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (31 samples, 21.38%)</title><rect x="913.3" y="643.0" width="252.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="916.3" y="654.0">C2Compiler::compile_method(ciEnv*,..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (31 samples, 21.38%)</title><rect x="913.3" y="627.0" width="252.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="916.3" y="638.0">Compile::Compile(ciEnv*, C2Compile..</text>
</g>
<g>
<title>Compile::Code_Gen() (20 samples, 13.79%)</title><rect x="913.3" y="611.0" width="162.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="916.3" y="622.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Arena::~Arena() (1 samples, 0.69%)</title><rect x="913.3" y="595.0" width="8.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="916.3" y="606.0"></text>
</g>
<g>
<title>Arena::destruct_contents() (1 samples, 0.69%)</title><rect x="913.3" y="579.0" width="8.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="916.3" y="590.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.69%)</title><rect x="913.3" y="563.0" width="8.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="916.3" y="574.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.69%)</title><rect x="921.4" y="595.0" width="8.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="924.4" y="606.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.69%)</title><rect x="921.4" y="579.0" width="8.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="924.4" y="590.0"></text>
</g>
<g>
<title>ParmNode::Opcode() const (1 samples, 0.69%)</title><rect x="921.4" y="563.0" width="8.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="924.4" y="574.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.69%)</title><rect x="929.6" y="595.0" width="8.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="932.6" y="606.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.69%)</title><rect x="929.6" y="579.0" width="8.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="932.6" y="590.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 1.38%)</title><rect x="937.7" y="595.0" width="16.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="940.7" y="606.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 1.38%)</title><rect x="937.7" y="579.0" width="16.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="940.7" y="590.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_List&amp;) (2 samples, 1.38%)</title><rect x="937.7" y="563.0" width="16.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="940.7" y="574.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.69%)</title><rect x="945.9" y="547.0" width="8.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="948.9" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (15 samples, 10.34%)</title><rect x="954.0" y="595.0" width="122.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="957.0" y="606.0">PhaseChaitin::R..</text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.69%)</title><rect x="954.0" y="579.0" width="8.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="957.0" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.69%)</title><rect x="962.1" y="579.0" width="8.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="965.1" y="590.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.69%)</title><rect x="962.1" y="563.0" width="8.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="965.1" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 1.38%)</title><rect x="970.3" y="579.0" width="16.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="973.3" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&amp;, GrowableArray&lt;unsigned int&gt;, int, unsigned int*, Node**, bool) (1 samples, 0.69%)</title><rect x="978.4" y="563.0" width="8.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="981.4" y="574.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.69%)</title><rect x="978.4" y="547.0" width="8.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="981.4" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 1.38%)</title><rect x="986.6" y="579.0" width="16.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="989.6" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.69%)</title><rect x="994.7" y="563.0" width="8.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="997.7" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.69%)</title><rect x="1002.8" y="579.0" width="8.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1005.8" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.69%)</title><rect x="1002.8" y="563.0" width="8.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1005.8" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.215] (1 samples, 0.69%)</title><rect x="1011.0" y="579.0" width="8.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1014.0" y="590.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.69%)</title><rect x="1011.0" y="563.0" width="8.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1014.0" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.69%)</title><rect x="1019.1" y="579.0" width="8.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1022.1" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.69%)</title><rect x="1019.1" y="563.0" width="8.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1022.1" y="574.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.69%)</title><rect x="1027.2" y="579.0" width="8.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1030.2" y="590.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.69%)</title><rect x="1027.2" y="563.0" width="8.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1030.2" y="574.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) (1 samples, 0.69%)</title><rect x="1027.2" y="547.0" width="8.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1030.2" y="558.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (1 samples, 0.69%)</title><rect x="1027.2" y="531.0" width="8.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1030.2" y="542.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (5 samples, 3.45%)</title><rect x="1035.4" y="579.0" width="40.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1038.4" y="590.0">Pha..</text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 2.07%)</title><rect x="1051.7" y="563.0" width="24.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1054.7" y="574.0">P..</text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.69%)</title><rect x="1067.9" y="547.0" width="8.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1070.9" y="558.0"></text>
</g>
<g>
<title>Compile::Optimize() (7 samples, 4.83%)</title><rect x="1076.1" y="611.0" width="56.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1079.1" y="622.0">Compil..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (7 samples, 4.83%)</title><rect x="1076.1" y="595.0" width="56.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1079.1" y="606.0">PhaseI..</text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.69%)</title><rect x="1076.1" y="579.0" width="8.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1079.1" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.69%)</title><rect x="1084.2" y="579.0" width="8.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1087.2" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 1.38%)</title><rect x="1092.3" y="579.0" width="16.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1095.3" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (2 samples, 1.38%)</title><rect x="1092.3" y="563.0" width="16.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1095.3" y="574.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 1.38%)</title><rect x="1108.6" y="579.0" width="16.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1111.6" y="590.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 1.38%)</title><rect x="1108.6" y="563.0" width="16.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1111.6" y="574.0"></text>
</g>
<g>
<title>AddNode::hash() const (1 samples, 0.69%)</title><rect x="1108.6" y="547.0" width="8.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1111.6" y="558.0"></text>
</g>
<g>
<title>Node::destruct() (1 samples, 0.69%)</title><rect x="1116.8" y="547.0" width="8.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1119.8" y="558.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (1 samples, 0.69%)</title><rect x="1124.9" y="579.0" width="8.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1127.9" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 2.76%)</title><rect x="1133.0" y="611.0" width="32.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1136.0" y="622.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 2.76%)</title><rect x="1133.0" y="595.0" width="32.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1136.0" y="606.0">Pa..</text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 2.76%)</title><rect x="1133.0" y="579.0" width="32.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1136.0" y="590.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 2.76%)</title><rect x="1133.0" y="563.0" width="32.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1136.0" y="574.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 2.76%)</title><rect x="1133.0" y="547.0" width="32.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1136.0" y="558.0">Pa..</text>
</g>
<g>
<title>Parse::do_call() (4 samples, 2.76%)</title><rect x="1133.0" y="531.0" width="32.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1136.0" y="542.0">Pa..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 2.07%)</title><rect x="1141.2" y="515.0" width="24.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1144.2" y="526.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 2.07%)</title><rect x="1141.2" y="499.0" width="24.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1144.2" y="510.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 2.07%)</title><rect x="1141.2" y="483.0" width="24.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1144.2" y="494.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 2.07%)</title><rect x="1141.2" y="467.0" width="24.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1144.2" y="478.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 2.07%)</title><rect x="1141.2" y="451.0" width="24.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1144.2" y="462.0">P..</text>
</g>
<g>
<title>Parse::do_call() (3 samples, 2.07%)</title><rect x="1141.2" y="435.0" width="24.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1144.2" y="446.0">P..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.69%)</title><rect x="1141.2" y="419.0" width="8.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1144.2" y="430.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.69%)</title><rect x="1141.2" y="403.0" width="8.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1144.2" y="414.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.69%)</title><rect x="1141.2" y="387.0" width="8.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1144.2" y="398.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.69%)</title><rect x="1141.2" y="371.0" width="8.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1144.2" y="382.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.69%)</title><rect x="1141.2" y="355.0" width="8.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1144.2" y="366.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.69%)</title><rect x="1141.2" y="339.0" width="8.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.2" y="350.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.69%)</title><rect x="1141.2" y="323.0" width="8.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1144.2" y="334.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.69%)</title><rect x="1141.2" y="307.0" width="8.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1144.2" y="318.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.69%)</title><rect x="1141.2" y="291.0" width="8.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.2" y="302.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.69%)</title><rect x="1141.2" y="275.0" width="8.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1144.2" y="286.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.69%)</title><rect x="1141.2" y="259.0" width="8.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.2" y="270.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.69%)</title><rect x="1141.2" y="243.0" width="8.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.2" y="254.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.69%)</title><rect x="1141.2" y="227.0" width="8.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.2" y="238.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.69%)</title><rect x="1141.2" y="211.0" width="8.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.2" y="222.0"></text>
</g>
<g>
<title>Method::invocation_count() (1 samples, 0.69%)</title><rect x="1141.2" y="195.0" width="8.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1144.2" y="206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 1.38%)</title><rect x="1149.3" y="419.0" width="16.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.3" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 1.38%)</title><rect x="1149.3" y="403.0" width="16.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1152.3" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 1.38%)</title><rect x="1149.3" y="387.0" width="16.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1152.3" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 1.38%)</title><rect x="1149.3" y="371.0" width="16.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1152.3" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 1.38%)</title><rect x="1149.3" y="355.0" width="16.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.3" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 1.38%)</title><rect x="1149.3" y="339.0" width="16.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.3" y="350.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.69%)</title><rect x="1149.3" y="323.0" width="8.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1152.3" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.69%)</title><rect x="1157.4" y="323.0" width="8.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1160.4" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.69%)</title><rect x="1157.4" y="307.0" width="8.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1160.4" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.69%)</title><rect x="1157.4" y="291.0" width="8.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.4" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.69%)</title><rect x="1157.4" y="275.0" width="8.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.4" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.69%)</title><rect x="1157.4" y="259.0" width="8.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1160.4" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.69%)</title><rect x="1157.4" y="243.0" width="8.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.4" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.69%)</title><rect x="1157.4" y="227.0" width="8.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1160.4" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.69%)</title><rect x="1157.4" y="211.0" width="8.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1160.4" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.69%)</title><rect x="1157.4" y="195.0" width="8.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.4" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.69%)</title><rect x="1157.4" y="179.0" width="8.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1160.4" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.69%)</title><rect x="1157.4" y="163.0" width="8.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.4" y="174.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.69%)</title><rect x="1157.4" y="147.0" width="8.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1160.4" y="158.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.69%)</title><rect x="1157.4" y="131.0" width="8.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1160.4" y="142.0"></text>
</g>
<g>
<title>GraphKit::store_oop(Node*, Node*, Node*, TypePtr const*, Node*, TypeOopPtr const*, BasicType, bool, MemNode::MemOrd, bool) (1 samples, 0.69%)</title><rect x="1157.4" y="115.0" width="8.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1160.4" y="126.0"></text>
</g>
<g>
<title>GraphKit::g1_write_barrier_pre(bool, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) (1 samples, 0.69%)</title><rect x="1157.4" y="99.0" width="8.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.4" y="110.0"></text>
</g>
<g>
<title>IdealKit::end_if() (1 samples, 0.69%)</title><rect x="1157.4" y="83.0" width="8.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1160.4" y="94.0"></text>
</g>
<g>
<title>IdealKit::goto_(Node*, bool) (1 samples, 0.69%)</title><rect x="1157.4" y="67.0" width="8.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1160.4" y="78.0"></text>
</g>
<g>
<title>IdealKit::do_memory_merge(Node*, Node*) (1 samples, 0.69%)</title><rect x="1157.4" y="51.0" width="8.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.4" y="62.0"></text>
</g>
<g>
<title>PhiNode::make(Node*, Node*, Type const*, TypePtr const*) (1 samples, 0.69%)</title><rect x="1157.4" y="35.0" width="8.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.4" y="46.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (3 samples, 2.07%)</title><rect x="1165.6" y="643.0" width="24.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.6" y="654.0">C..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (3 samples, 2.07%)</title><rect x="1165.6" y="627.0" width="24.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.6" y="638.0">C..</text>
</g>
<g>
<title>Compilation::compile_method() (3 samples, 2.07%)</title><rect x="1165.6" y="611.0" width="24.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.6" y="622.0">C..</text>
</g>
<g>
<title>Compilation::compile_java_method() (3 samples, 2.07%)</title><rect x="1165.6" y="595.0" width="24.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.6" y="606.0">C..</text>
</g>
<g>
<title>Compilation::build_hir() (2 samples, 1.38%)</title><rect x="1165.6" y="579.0" width="16.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.6" y="590.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 1.38%)</title><rect x="1165.6" y="563.0" width="16.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1168.6" y="574.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 1.38%)</title><rect x="1165.6" y="547.0" width="16.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.6" y="558.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2 samples, 1.38%)</title><rect x="1165.6" y="531.0" width="16.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.6" y="542.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 1.38%)</title><rect x="1165.6" y="515.0" width="16.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.6" y="526.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 1.38%)</title><rect x="1165.6" y="499.0" width="16.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.6" y="510.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 1.38%)</title><rect x="1165.6" y="483.0" width="16.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.6" y="494.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (2 samples, 1.38%)</title><rect x="1165.6" y="467.0" width="16.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.6" y="478.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (2 samples, 1.38%)</title><rect x="1165.6" y="451.0" width="16.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.6" y="462.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 1.38%)</title><rect x="1165.6" y="435.0" width="16.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.6" y="446.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 1.38%)</title><rect x="1165.6" y="419.0" width="16.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1168.6" y="430.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 1.38%)</title><rect x="1165.6" y="403.0" width="16.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1168.6" y="414.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.69%)</title><rect x="1165.6" y="387.0" width="8.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.6" y="398.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.69%)</title><rect x="1165.6" y="371.0" width="8.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.6" y="382.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.69%)</title><rect x="1165.6" y="355.0" width="8.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.6" y="366.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.69%)</title><rect x="1165.6" y="339.0" width="8.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1168.6" y="350.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.69%)</title><rect x="1165.6" y="323.0" width="8.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1168.6" y="334.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.69%)</title><rect x="1165.6" y="307.0" width="8.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.6" y="318.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.69%)</title><rect x="1165.6" y="291.0" width="8.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.6" y="302.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.69%)</title><rect x="1165.6" y="275.0" width="8.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1168.6" y="286.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.69%)</title><rect x="1165.6" y="259.0" width="8.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.6" y="270.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.69%)</title><rect x="1165.6" y="243.0" width="8.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1168.6" y="254.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.69%)</title><rect x="1165.6" y="227.0" width="8.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.6" y="238.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.69%)</title><rect x="1165.6" y="211.0" width="8.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.6" y="222.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.69%)</title><rect x="1165.6" y="195.0" width="8.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.6" y="206.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.69%)</title><rect x="1165.6" y="179.0" width="8.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1168.6" y="190.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.69%)</title><rect x="1165.6" y="163.0" width="8.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.6" y="174.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.69%)</title><rect x="1165.6" y="147.0" width="8.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.6" y="158.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.69%)</title><rect x="1165.6" y="131.0" width="8.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.6" y="142.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.69%)</title><rect x="1165.6" y="115.0" width="8.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.6" y="126.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.69%)</title><rect x="1165.6" y="99.0" width="8.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1168.6" y="110.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index(constantPoolHandle, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.69%)</title><rect x="1165.6" y="83.0" width="8.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1168.6" y="94.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle, ciSymbol*, bool) (1 samples, 0.69%)</title><rect x="1165.6" y="67.0" width="8.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.6" y="78.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.69%)</title><rect x="1173.7" y="387.0" width="8.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.7" y="398.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.69%)</title><rect x="1173.7" y="371.0" width="8.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.7" y="382.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.69%)</title><rect x="1173.7" y="355.0" width="8.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.7" y="366.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.69%)</title><rect x="1173.7" y="339.0" width="8.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.7" y="350.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.69%)</title><rect x="1173.7" y="323.0" width="8.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.7" y="334.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle, ciInstanceKlass*) (1 samples, 0.69%)</title><rect x="1173.7" y="307.0" width="8.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.7" y="318.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle, ciSymbol*) (1 samples, 0.69%)</title><rect x="1173.7" y="291.0" width="8.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.7" y="302.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.69%)</title><rect x="1173.7" y="275.0" width="8.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.7" y="286.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.69%)</title><rect x="1173.7" y="259.0" width="8.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.7" y="270.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.69%)</title><rect x="1181.9" y="579.0" width="8.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.9" y="590.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.69%)</title><rect x="1181.9" y="563.0" width="8.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.9" y="574.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.69%)</title><rect x="1181.9" y="547.0" width="8.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.9" y="558.0"></text>
</g>
</g>
</svg>
