<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="597"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="597"> </text>
<g id="frames">
<g>
<title>all (211 samples, 100.00%)</title><rect x="10.0" y="563.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="574.0">all</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.47%)</title><rect x="10.0" y="547.0" width="5.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.47%)</title><rect x="10.0" y="531.0" width="5.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.run (19 samples, 9.00%)</title><rect x="15.6" y="547.0" width="106.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.6" y="558.0">com/linecorp/..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.commitCompletedOffsets (1 samples, 0.47%)</title><rect x="15.6" y="531.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.6" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.commitSync (1 samples, 0.47%)</title><rect x="15.6" y="515.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.6" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.commitSync (1 samples, 0.47%)</title><rect x="15.6" y="499.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.6" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.commitOffsetsSync (1 samples, 0.47%)</title><rect x="15.6" y="483.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.6" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (1 samples, 0.47%)</title><rect x="15.6" y="467.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.6" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (1 samples, 0.47%)</title><rect x="15.6" y="451.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.6" y="462.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (1 samples, 0.47%)</title><rect x="15.6" y="435.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.6" y="446.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (1 samples, 0.47%)</title><rect x="15.6" y="419.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.6" y="430.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.handleCompletedReceives (1 samples, 0.47%)</title><rect x="15.6" y="403.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.6" y="414.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.parseStructMaybeUpdateThrottleTimeMetrics (1 samples, 0.47%)</title><rect x="15.6" y="387.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.6" y="398.0"></text>
</g>
<g>
<title>org/apache/kafka/common/protocol/ApiKeys.parseResponse (1 samples, 0.47%)</title><rect x="15.6" y="371.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.6" y="382.0"></text>
</g>
<g>
<title>org/apache/kafka/common/protocol/types/Schema.read (1 samples, 0.47%)</title><rect x="15.6" y="355.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.6" y="366.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.47%)</title><rect x="15.6" y="339.0" width="5.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="18.6" y="350.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.pollOnce (18 samples, 8.53%)</title><rect x="21.2" y="531.0" width="100.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.2" y="542.0">com/linecorp..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.pausePartitions (2 samples, 0.95%)</title><rect x="21.2" y="515.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="24.2" y="526.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionContexts.partitionsNeedsPause (1 samples, 0.47%)</title><rect x="21.2" y="499.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.47%)</title><rect x="21.2" y="483.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.2" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (1 samples, 0.47%)</title><rect x="21.2" y="467.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.47%)</title><rect x="26.8" y="499.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.47%)</title><rect x="26.8" y="483.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.47%)</title><rect x="26.8" y="467.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1990451863.invoke_MT (1 samples, 0.47%)</title><rect x="26.8" y="451.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$BMH/1973338884.reinvoke (1 samples, 0.47%)</title><rect x="26.8" y="435.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/263025902.invokeStatic_L6_L (1 samples, 0.47%)</title><rect x="26.8" y="419.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 0.47%)</title><rect x="26.8" y="403.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.47%)</title><rect x="26.8" y="387.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.47%)</title><rect x="26.8" y="371.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.8" y="382.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.defineAnonymousClass (1 samples, 0.47%)</title><rect x="26.8" y="355.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.8" y="366.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass (1 samples, 0.47%)</title><rect x="26.8" y="339.0" width="5.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="29.8" y="350.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, KlassHandle, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.47%)</title><rect x="26.8" y="323.0" width="5.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="29.8" y="334.0"></text>
</g>
<g>
<title>ClassFileParser::parseClassFile(Symbol*, ClassLoaderData*, Handle, KlassHandle, GrowableArray&lt;Handle&gt;*, TempNewSymbol&amp;, bool, Thread*) (1 samples, 0.47%)</title><rect x="26.8" y="307.0" width="5.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="29.8" y="318.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.47%)</title><rect x="26.8" y="291.0" width="5.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="29.8" y="302.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(bool, AccessFlags*, Thread*) (1 samples, 0.47%)</title><rect x="26.8" y="275.0" width="5.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="29.8" y="286.0"></text>
</g>
<g>
<title>ClassFileParser::copy_method_annotations(ConstMethod*, unsigned char*, int, unsigned char*, int, unsigned char*, int, unsigned char*, int, unsigned char*, int, unsigned char*, int, unsigned char*, int, Thread*) (1 samples, 0.47%)</title><rect x="26.8" y="259.0" width="5.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="29.8" y="270.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 2.84%)</title><rect x="32.4" y="515.0" width="33.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.4" y="526.0">ja..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription$$Lambda$247/267914652.accept (6 samples, 2.84%)</title><rect x="32.4" y="499.0" width="33.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.4" y="510.0">co..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.lambda$pollOnce$38 (6 samples, 2.84%)</title><rect x="32.4" y="483.0" width="33.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.4" y="494.0">co..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionContext.addRequest (3 samples, 1.42%)</title><rect x="32.4" y="467.0" width="16.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.4" y="478.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionProcessor.addTask (3 samples, 1.42%)</title><rect x="32.4" y="451.0" width="16.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="35.4" y="462.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorUnit.putTask (3 samples, 1.42%)</title><rect x="32.4" y="435.0" width="16.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (3 samples, 1.42%)</title><rect x="32.4" y="419.0" width="16.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 1.42%)</title><rect x="32.4" y="403.0" width="16.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 1.42%)</title><rect x="32.4" y="387.0" width="16.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 1.42%)</title><rect x="32.4" y="371.0" width="16.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 1.42%)</title><rect x="32.4" y="355.0" width="16.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 1.42%)</title><rect x="32.4" y="339.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.4" y="350.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/TaskRequest.&lt;init&gt; (3 samples, 1.42%)</title><rect x="49.1" y="467.0" width="16.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.95%)</title><rect x="54.7" y="451.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.7" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.95%)</title><rect x="54.7" y="435.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.7" y="446.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.95%)</title><rect x="54.7" y="419.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.7" y="430.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (10 samples, 4.74%)</title><rect x="65.9" y="515.0" width="55.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.9" y="526.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (10 samples, 4.74%)</title><rect x="65.9" y="499.0" width="55.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.9" y="510.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.pollForFetches (9 samples, 4.27%)</title><rect x="65.9" y="483.0" width="50.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.9" y="494.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (4 samples, 1.90%)</title><rect x="65.9" y="467.0" width="22.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.9" y="478.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (4 samples, 1.90%)</title><rect x="65.9" y="451.0" width="22.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.9" y="462.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (2 samples, 0.95%)</title><rect x="65.9" y="435.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.9" y="446.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.poll (2 samples, 0.95%)</title><rect x="65.9" y="419.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.9" y="430.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.47%)</title><rect x="65.9" y="403.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.9" y="414.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.47%)</title><rect x="65.9" y="387.0" width="5.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="68.9" y="398.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.select (1 samples, 0.47%)</title><rect x="71.5" y="403.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1 samples, 0.47%)</title><rect x="71.5" y="387.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.47%)</title><rect x="71.5" y="371.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.47%)</title><rect x="71.5" y="355.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.poll (1 samples, 0.47%)</title><rect x="71.5" y="339.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.epollWait (1 samples, 0.47%)</title><rect x="71.5" y="323.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.5" y="334.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.trySend (1 samples, 0.47%)</title><rect x="77.1" y="435.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.1" y="446.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.send (1 samples, 0.47%)</title><rect x="77.1" y="419.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.1" y="430.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.doSend (1 samples, 0.47%)</title><rect x="77.1" y="403.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.1" y="414.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.doSend (1 samples, 0.47%)</title><rect x="77.1" y="387.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.1" y="398.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/AbstractRequest.toSend (1 samples, 0.47%)</title><rect x="77.1" y="371.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.1" y="382.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/AbstractRequest.serialize (1 samples, 0.47%)</title><rect x="77.1" y="355.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.1" y="366.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/FetchRequest.toStruct (1 samples, 0.47%)</title><rect x="77.1" y="339.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.1" y="350.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/FetchRequest$TopicAndPartitionData.batchByTopic (1 samples, 0.47%)</title><rect x="77.1" y="323.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.1" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext (1 samples, 0.47%)</title><rect x="77.1" y="307.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.1" y="318.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Timer.update (1 samples, 0.47%)</title><rect x="82.7" y="435.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.7" y="446.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (1 samples, 0.47%)</title><rect x="82.7" y="419.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.7" y="430.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchedRecords (4 samples, 1.90%)</title><rect x="88.3" y="467.0" width="22.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.3" y="478.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchRecords (4 samples, 1.90%)</title><rect x="88.3" y="451.0" width="22.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.3" y="462.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.access$1700 (4 samples, 1.90%)</title><rect x="88.3" y="435.0" width="22.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.3" y="446.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.fetchRecords (4 samples, 1.90%)</title><rect x="88.3" y="419.0" width="22.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.3" y="430.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.nextFetchedRecord (2 samples, 0.95%)</title><rect x="88.3" y="403.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.3" y="414.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.maybeEnsureValid (1 samples, 0.47%)</title><rect x="93.9" y="387.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.9" y="398.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.ensureValid (1 samples, 0.47%)</title><rect x="93.9" y="371.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.9" y="382.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.isValid (1 samples, 0.47%)</title><rect x="93.9" y="355.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.9" y="366.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.computeChecksum (1 samples, 0.47%)</title><rect x="93.9" y="339.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.9" y="350.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Crc32C.compute (1 samples, 0.47%)</title><rect x="93.9" y="323.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.9" y="334.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Checksums.update (1 samples, 0.47%)</title><rect x="93.9" y="307.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.9" y="318.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/PureJavaCrc32C.update (1 samples, 0.47%)</title><rect x="93.9" y="291.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.9" y="302.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.access$3500 (2 samples, 0.95%)</title><rect x="99.5" y="403.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.5" y="414.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.parseRecord (2 samples, 0.95%)</title><rect x="99.5" y="387.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.5" y="398.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.maybeLeaderEpoch (1 samples, 0.47%)</title><rect x="99.5" y="371.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.5" y="382.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.47%)</title><rect x="99.5" y="355.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.5" y="366.0"></text>
</g>
<g>
<title>org/apache/kafka/common/header/internals/RecordHeaders.&lt;init&gt; (1 samples, 0.47%)</title><rect x="105.1" y="371.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.47%)</title><rect x="105.1" y="355.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.1" y="366.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.sendFetches (1 samples, 0.47%)</title><rect x="110.7" y="467.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.7" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.prepareFetchRequests (1 samples, 0.47%)</title><rect x="110.7" y="451.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.7" y="462.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.assignedPartitions (1 samples, 0.47%)</title><rect x="110.7" y="435.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.7" y="446.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.47%)</title><rect x="110.7" y="419.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.7" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.47%)</title><rect x="110.7" y="403.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.7" y="414.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.47%)</title><rect x="110.7" y="387.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.7" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.47%)</title><rect x="110.7" y="371.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.7" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.47%)</title><rect x="110.7" y="355.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.7" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.47%)</title><rect x="110.7" y="339.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.7" y="350.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.updateAssignmentMetadataIfNeeded (1 samples, 0.47%)</title><rect x="116.3" y="483.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="119.3" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.updateFetchPositions (1 samples, 0.47%)</title><rect x="116.3" y="467.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="119.3" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.validateOffsetsIfNeeded (1 samples, 0.47%)</title><rect x="116.3" y="451.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.3" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (158 samples, 74.88%)</title><rect x="121.8" y="547.0" width="883.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.8" y="558.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (158 samples, 74.88%)</title><rect x="121.8" y="531.0" width="883.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.8" y="542.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (158 samples, 74.88%)</title><rect x="121.8" y="515.0" width="883.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.8" y="526.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorUnit$$Lambda$261/567808441.run (153 samples, 72.51%)</title><rect x="138.6" y="499.0" width="855.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="141.6" y="510.0">com/linecorp/decaton/processor/runtime/ProcessorUnit$$Lambda$261/567808441.run</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorUnit.lambda$putTask$49 (152 samples, 72.04%)</title><rect x="144.2" y="483.0" width="850.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="147.2" y="494.0">com/linecorp/decaton/processor/runtime/ProcessorUnit.lambda$putTask$49</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorUnit.processTask (152 samples, 72.04%)</title><rect x="144.2" y="467.0" width="850.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="147.2" y="478.0">com/linecorp/decaton/processor/runtime/ProcessorUnit.processTask</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.scheduleThenProcess (151 samples, 71.56%)</title><rect x="144.2" y="451.0" width="844.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.2" y="462.0">com/linecorp/decaton/processor/runtime/ProcessPipeline.scheduleThenProcess</text>
</g>
<g>
<title>com/fasterxml/jackson/core/base/ParserBase.close (1 samples, 0.47%)</title><rect x="166.6" y="435.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="169.6" y="446.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.extract (26 samples, 12.32%)</title><rect x="172.2" y="435.0" width="145.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.2" y="446.0">com/linecorp/decat..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner$$Lambda$41/715378067.extract (26 samples, 12.32%)</title><rect x="172.2" y="419.0" width="145.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.2" y="430.0">com/linecorp/decat..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner.lambda$init$0 (26 samples, 12.32%)</title><rect x="172.2" y="403.0" width="145.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.2" y="414.0">com/linecorp/decat..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (26 samples, 12.32%)</title><rect x="172.2" y="387.0" width="145.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.2" y="398.0">com/linecorp/decat..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (26 samples, 12.32%)</title><rect x="172.2" y="371.0" width="145.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.2" y="382.0">com/linecorp/decat..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.readValue (26 samples, 12.32%)</title><rect x="172.2" y="355.0" width="145.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="175.2" y="366.0">com/fasterxml/jack..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.createParser (8 samples, 3.79%)</title><rect x="172.2" y="339.0" width="44.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="175.2" y="350.0">com/..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createContext (1 samples, 0.47%)</title><rect x="189.0" y="323.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.0" y="334.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._getBufferRecycler (1 samples, 0.47%)</title><rect x="189.0" y="307.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.0" y="318.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecyclers.getBufferRecycler (1 samples, 0.47%)</title><rect x="189.0" y="291.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.0" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.47%)</title><rect x="189.0" y="275.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.0" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.47%)</title><rect x="189.0" y="259.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.0" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.47%)</title><rect x="189.0" y="243.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.0" y="254.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createParser (4 samples, 1.90%)</title><rect x="194.5" y="323.0" width="22.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.5" y="334.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.constructParser (2 samples, 0.95%)</title><rect x="205.7" y="307.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.7" y="318.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.detectEncoding (2 samples, 0.95%)</title><rect x="205.7" y="291.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.7" y="302.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.47%)</title><rect x="205.7" y="275.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="208.7" y="286.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.handleBOM (1 samples, 0.47%)</title><rect x="211.3" y="275.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="214.3" y="286.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._readMapAndClose (18 samples, 8.53%)</title><rect x="216.9" y="339.0" width="100.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.9" y="350.0">com/fasterxm..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._findRootDeserializer (2 samples, 0.95%)</title><rect x="216.9" y="323.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.95%)</title><rect x="216.9" y="307.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.9" y="318.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/SimpleType.equals (2 samples, 0.95%)</title><rect x="216.9" y="291.0" width="11.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="219.9" y="302.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._initForReading (3 samples, 1.42%)</title><rect x="228.1" y="323.0" width="16.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="231.1" y="334.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (3 samples, 1.42%)</title><rect x="228.1" y="307.0" width="16.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.1" y="318.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nextTokenNotInObject (2 samples, 0.95%)</title><rect x="228.1" y="291.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.1" y="302.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonReadContext.createChildObjectContext (2 samples, 0.95%)</title><rect x="228.1" y="275.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.1" y="286.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipWS (1 samples, 0.47%)</title><rect x="239.3" y="291.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.3" y="302.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserialize (13 samples, 6.16%)</title><rect x="244.9" y="323.0" width="72.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.9" y="334.0">com/fast..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (7 samples, 3.32%)</title><rect x="244.9" y="307.0" width="39.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="247.9" y="318.0">com..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseName (3 samples, 1.42%)</title><rect x="244.9" y="291.0" width="16.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="247.9" y="302.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName (3 samples, 1.42%)</title><rect x="244.9" y="275.0" width="16.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="247.9" y="286.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName2 (3 samples, 1.42%)</title><rect x="244.9" y="259.0" width="16.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.9" y="270.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.findName (3 samples, 1.42%)</title><rect x="244.9" y="243.0" width="16.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="247.9" y="254.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName (1 samples, 0.47%)</title><rect x="256.1" y="227.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.1" y="238.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parsePosNumber (4 samples, 1.90%)</title><rect x="261.7" y="291.0" width="22.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.7" y="302.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._verifyNoLeadingZeroes (2 samples, 0.95%)</title><rect x="261.7" y="275.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.7" y="286.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/TextBuffer.emptyAndGetCurrentSegment (2 samples, 0.95%)</title><rect x="272.8" y="275.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.8" y="286.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/TextBuffer.buf (2 samples, 0.95%)</title><rect x="272.8" y="259.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.8" y="270.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecycler.allocCharBuffer (2 samples, 0.95%)</title><rect x="272.8" y="243.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.8" y="254.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecycler.charBufferLength (2 samples, 0.95%)</title><rect x="272.8" y="227.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="275.8" y="238.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserializeFromObject (6 samples, 2.84%)</title><rect x="284.0" y="307.0" width="33.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="287.0" y="318.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializerBase.deserializeFromObjectUsingNonDefault (6 samples, 2.84%)</title><rect x="284.0" y="291.0" width="33.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.0" y="302.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeUsingPropertyBased (6 samples, 2.84%)</title><rect x="284.0" y="275.0" width="33.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.0" y="286.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (1 samples, 0.47%)</title><rect x="284.0" y="259.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="287.0" y="270.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parsePosNumber (1 samples, 0.47%)</title><rect x="284.0" y="243.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.0" y="254.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/TextBuffer.emptyAndGetCurrentSegment (1 samples, 0.47%)</title><rect x="284.0" y="227.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="287.0" y="238.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/TextBuffer.buf (1 samples, 0.47%)</title><rect x="284.0" y="211.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="287.0" y="222.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeWithErrorWrapping (2 samples, 0.95%)</title><rect x="289.6" y="259.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="292.6" y="270.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/SettableBeanProperty.deserialize (2 samples, 0.95%)</title><rect x="289.6" y="243.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.6" y="254.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/NumberDeserializers$LongDeserializer.deserialize (2 samples, 0.95%)</title><rect x="289.6" y="227.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="292.6" y="238.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/NumberDeserializers$LongDeserializer.deserialize (2 samples, 0.95%)</title><rect x="289.6" y="211.0" width="11.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="292.6" y="222.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.95%)</title><rect x="289.6" y="195.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="292.6" y="206.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.build (2 samples, 0.95%)</title><rect x="300.8" y="259.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.8" y="270.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/ValueInstantiator.createFromObjectWith (2 samples, 0.95%)</title><rect x="300.8" y="243.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.8" y="254.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.createFromObjectWith (2 samples, 0.95%)</title><rect x="300.8" y="227.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="303.8" y="238.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedConstructor.call (2 samples, 0.95%)</title><rect x="300.8" y="211.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.8" y="222.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.95%)</title><rect x="300.8" y="195.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="303.8" y="206.0"></text>
</g>
<g>
<title>sun/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.95%)</title><rect x="300.8" y="179.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="303.8" y="190.0"></text>
</g>
<g>
<title>sun/reflect/NativeConstructorAccessorImpl.newInstance (2 samples, 0.95%)</title><rect x="300.8" y="163.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="303.8" y="174.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.findCreatorProperty (1 samples, 0.47%)</title><rect x="312.0" y="259.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.0" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.47%)</title><rect x="312.0" y="243.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.0" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.47%)</title><rect x="312.0" y="227.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="315.0" y="238.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.process (112 samples, 53.08%)</title><rect x="317.6" y="435.0" width="626.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="320.6" y="446.0">com/linecorp/decaton/processor/runtime/ProcessPipeline.process</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/LoggingContext.close (16 samples, 7.58%)</title><rect x="317.6" y="419.0" width="89.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.6" y="430.0">com/lineco..</text>
</g>
<g>
<title>org/slf4j/MDC.remove (16 samples, 7.58%)</title><rect x="317.6" y="403.0" width="89.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="320.6" y="414.0">org/slf4j/..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.remove (16 samples, 7.58%)</title><rect x="317.6" y="387.0" width="89.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="320.6" y="398.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getAndSetLastOperation (1 samples, 0.47%)</title><rect x="345.5" y="371.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="348.5" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.remove (9 samples, 4.27%)</title><rect x="351.1" y="371.0" width="50.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="354.1" y="382.0">java/..</text>
</g>
<g>
<title>java/util/HashMap.remove (8 samples, 3.79%)</title><rect x="356.7" y="355.0" width="44.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="359.7" y="366.0">java..</text>
</g>
<g>
<title>java/util/HashMap.removeNode (8 samples, 3.79%)</title><rect x="356.7" y="339.0" width="44.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.7" y="350.0">java..</text>
</g>
<g>
<title>java/util/HashMap.remove (1 samples, 0.47%)</title><rect x="401.5" y="371.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="404.5" y="382.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessingContextImpl.loggingContext (25 samples, 11.85%)</title><rect x="407.1" y="419.0" width="139.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.1" y="430.0">com/linecorp/deca..</text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.47%)</title><rect x="407.1" y="403.0" width="5.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="410.1" y="414.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.47%)</title><rect x="407.1" y="387.0" width="5.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="410.1" y="398.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/LoggingContext.&lt;init&gt; (24 samples, 11.37%)</title><rect x="412.7" y="403.0" width="134.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.7" y="414.0">com/linecorp/deca..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/TaskMetadata.toString (13 samples, 6.16%)</title><rect x="412.7" y="387.0" width="72.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.7" y="398.0">com/line..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (11 samples, 5.21%)</title><rect x="418.2" y="371.0" width="61.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="421.2" y="382.0">java/l..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (11 samples, 5.21%)</title><rect x="418.2" y="355.0" width="61.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.2" y="366.0">java/l..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (10 samples, 4.74%)</title><rect x="418.2" y="339.0" width="56.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.2" y="350.0">java/..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.expandCapacity (10 samples, 4.74%)</title><rect x="418.2" y="323.0" width="56.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="421.2" y="334.0">java/..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 4.74%)</title><rect x="418.2" y="307.0" width="56.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.2" y="318.0">java/..</text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (6 samples, 2.84%)</title><rect x="429.4" y="291.0" width="33.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="432.4" y="302.0">Op..</text>
</g>
<g>
<title>CollectedHeap::new_store_pre_barrier(JavaThread*, oopDesc*) (1 samples, 0.47%)</title><rect x="429.4" y="275.0" width="5.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="432.4" y="286.0"></text>
</g>
<g>
<title>G1CollectedHeap::can_elide_initializing_store_barrier(oopDesc*) (1 samples, 0.47%)</title><rect x="429.4" y="259.0" width="5.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="432.4" y="270.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.95%)</title><rect x="435.0" y="275.0" width="11.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="438.0" y="286.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.95%)</title><rect x="435.0" y="259.0" width="11.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="438.0" y="270.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.47%)</title><rect x="440.6" y="243.0" width="5.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="443.6" y="254.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 1.42%)</title><rect x="446.2" y="275.0" width="16.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="449.2" y="286.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (3 samples, 1.42%)</title><rect x="446.2" y="259.0" width="16.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="449.2" y="270.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.47%)</title><rect x="451.8" y="243.0" width="5.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="454.8" y="254.0"></text>
</g>
<g>
<title>G1OffsetTableContigSpace::free() const (1 samples, 0.47%)</title><rect x="457.4" y="243.0" width="5.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="460.4" y="254.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.47%)</title><rect x="463.0" y="291.0" width="5.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="466.0" y="302.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.47%)</title><rect x="468.6" y="291.0" width="5.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="471.6" y="302.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.47%)</title><rect x="474.2" y="339.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="477.2" y="350.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.47%)</title><rect x="479.8" y="371.0" width="5.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="482.8" y="382.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.47%)</title><rect x="485.4" y="387.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="488.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.47%)</title><rect x="485.4" y="371.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.4" y="382.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.47%)</title><rect x="485.4" y="355.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.4" y="366.0"></text>
</g>
<g>
<title>org/slf4j/MDC.put (10 samples, 4.74%)</title><rect x="490.9" y="387.0" width="56.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="493.9" y="398.0">org/s..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.put (10 samples, 4.74%)</title><rect x="490.9" y="371.0" width="56.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.9" y="382.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getAndSetLastOperation (1 samples, 0.47%)</title><rect x="490.9" y="355.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.9" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.47%)</title><rect x="490.9" y="339.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.9" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (1 samples, 0.47%)</title><rect x="490.9" y="323.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.9" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.47%)</title><rect x="490.9" y="307.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.9" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.put (9 samples, 4.27%)</title><rect x="496.5" y="355.0" width="50.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.5" y="366.0">java/..</text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 4.27%)</title><rect x="496.5" y="339.0" width="50.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.5" y="350.0">java/..</text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 3.32%)</title><rect x="507.7" y="323.0" width="39.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.7" y="334.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.47%)</title><rect x="535.7" y="307.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.7" y="318.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.47%)</title><rect x="541.3" y="307.0" width="5.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="544.3" y="318.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessingContextImpl.push (65 samples, 30.81%)</title><rect x="546.9" y="419.0" width="363.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.9" y="430.0">com/linecorp/decaton/processor/runtime/Processing..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/LoggingContext.&lt;init&gt; (2 samples, 0.95%)</title><rect x="546.9" y="403.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.9" y="414.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessingContextImpl.pushDownStream (63 samples, 29.86%)</title><rect x="558.1" y="403.0" width="352.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="561.1" y="414.0">com/linecorp/decaton/processor/runtime/Processin..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner$$Lambda$199/334307265.process (60 samples, 28.44%)</title><rect x="558.1" y="387.0" width="335.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="561.1" y="398.0">com/linecorp/decaton/benchmark/DecatonRunner$..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner.lambda$null$1 (60 samples, 28.44%)</title><rect x="558.1" y="371.0" width="335.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.1" y="382.0">com/linecorp/decaton/benchmark/DecatonRunner...</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording.process (56 samples, 26.54%)</title><rect x="558.1" y="355.0" width="313.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.1" y="366.0">com/linecorp/decaton/benchmark/Recording.p..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (2 samples, 0.95%)</title><rect x="558.1" y="339.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.1" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (2 samples, 0.95%)</title><rect x="558.1" y="323.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.1" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callTurboFilters (2 samples, 0.95%)</title><rect x="558.1" y="307.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.1" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_0_3OrMore (2 samples, 0.95%)</title><rect x="558.1" y="291.0" width="11.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.size (2 samples, 0.95%)</title><rect x="558.1" y="275.0" width="11.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="561.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.getArray (2 samples, 0.95%)</title><rect x="558.1" y="259.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.1" y="270.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording$ChildRecording.process (52 samples, 24.64%)</title><rect x="569.2" y="339.0" width="290.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.2" y="350.0">com/linecorp/decaton/benchmark/Recordin..</text>
</g>
<g>
<title>java/lang/Thread.sleep (51 samples, 24.17%)</title><rect x="574.8" y="323.0" width="285.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="577.8" y="334.0">java/lang/Thread.sleep</text>
</g>
<g>
<title>JVM_Sleep (44 samples, 20.85%)</title><rect x="602.8" y="307.0" width="246.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="605.8" y="318.0">JVM_Sleep</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (3 samples, 1.42%)</title><rect x="625.2" y="291.0" width="16.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="628.2" y="302.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.47%)</title><rect x="641.9" y="291.0" width="5.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="644.9" y="302.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.47%)</title><rect x="641.9" y="275.0" width="5.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="644.9" y="286.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.47%)</title><rect x="647.5" y="291.0" width="5.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="650.5" y="302.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (35 samples, 16.59%)</title><rect x="653.1" y="291.0" width="195.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="656.1" y="302.0">os::sleep(Thread*, long, ..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 2.37%)</title><rect x="714.6" y="275.0" width="28.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="717.6" y="286.0">M..</text>
</g>
<g>
<title>Monitor::ILock(Thread*) (4 samples, 1.90%)</title><rect x="720.2" y="259.0" width="22.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="723.2" y="270.0">M..</text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.47%)</title><rect x="742.6" y="275.0" width="5.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="745.6" y="286.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.47%)</title><rect x="742.6" y="259.0" width="5.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="745.6" y="270.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (12 samples, 5.69%)</title><rect x="748.2" y="275.0" width="67.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="751.2" y="286.0">__pthre..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.47%)</title><rect x="815.3" y="275.0" width="5.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="818.3" y="286.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.47%)</title><rect x="820.9" y="275.0" width="5.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="823.9" y="286.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.47%)</title><rect x="826.5" y="275.0" width="5.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="829.5" y="286.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.47%)</title><rect x="832.1" y="275.0" width="5.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="835.1" y="286.0"></text>
</g>
<g>
<title>pthread_cond_destroy@@GLIBC_2.3.2 (1 samples, 0.47%)</title><rect x="837.7" y="275.0" width="5.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="840.7" y="286.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.47%)</title><rect x="843.3" y="275.0" width="5.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="846.3" y="286.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.47%)</title><rect x="848.9" y="307.0" width="5.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="851.9" y="318.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.47%)</title><rect x="854.5" y="307.0" width="5.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="857.5" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.95%)</title><rect x="860.0" y="339.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="863.0" y="350.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/ResourceTracker.track (4 samples, 1.90%)</title><rect x="871.2" y="355.0" width="22.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="874.2" y="366.0">c..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 1.90%)</title><rect x="871.2" y="339.0" width="22.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="874.2" y="350.0">j..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (4 samples, 1.90%)</title><rect x="871.2" y="323.0" width="22.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="874.2" y="334.0">j..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 1.90%)</title><rect x="871.2" y="307.0" width="22.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="874.2" y="318.0">j..</text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (3 samples, 1.42%)</title><rect x="893.6" y="387.0" width="16.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 2.84%)</title><rect x="910.4" y="419.0" width="33.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.4" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.47%)</title><rect x="932.7" y="403.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="935.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.47%)</title><rect x="932.7" y="387.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="935.7" y="398.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline$$Lambda$270/1918108734.accept (1 samples, 0.47%)</title><rect x="932.7" y="371.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="935.7" y="382.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.lambda$process$23 (1 samples, 0.47%)</title><rect x="932.7" y="355.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.7" y="366.0"></text>
</g>
<g>
<title>io/micrometer/core/instrument/composite/CompositeTimer.record (1 samples, 0.47%)</title><rect x="932.7" y="339.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="935.7" y="350.0"></text>
</g>
<g>
<title>io/micrometer/core/instrument/composite/AbstractCompositeMeter.forEachChild (1 samples, 0.47%)</title><rect x="932.7" y="323.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="935.7" y="334.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.47%)</title><rect x="938.3" y="403.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="941.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 3.79%)</title><rect x="943.9" y="435.0" width="44.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="946.9" y="446.0">java..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.process (1 samples, 0.47%)</title><rect x="955.1" y="419.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="958.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 2.37%)</title><rect x="960.7" y="419.0" width="28.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.7" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 2.37%)</title><rect x="960.7" y="403.0" width="28.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="963.7" y="414.0">j..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline$$Lambda$270/1918108734.accept (1 samples, 0.47%)</title><rect x="960.7" y="387.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="963.7" y="398.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.lambda$process$23 (1 samples, 0.47%)</title><rect x="960.7" y="371.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="963.7" y="382.0"></text>
</g>
<g>
<title>io/micrometer/core/instrument/composite/CompositeTimer.record (1 samples, 0.47%)</title><rect x="960.7" y="355.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="963.7" y="366.0"></text>
</g>
<g>
<title>io/micrometer/core/instrument/composite/AbstractCompositeMeter.forEachChild (1 samples, 0.47%)</title><rect x="960.7" y="339.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.7" y="350.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline$$Lambda$271/1986764460.accept (4 samples, 1.90%)</title><rect x="966.3" y="387.0" width="22.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="969.3" y="398.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.lambda$scheduleThenProcess$22 (4 samples, 1.90%)</title><rect x="966.3" y="371.0" width="22.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="969.3" y="382.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/OutOfOrderCommitControl$$Lambda$259/1621823235.complete (4 samples, 1.90%)</title><rect x="966.3" y="355.0" width="22.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.3" y="366.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/OutOfOrderCommitControl.lambda$reportFetchedOffset$36 (4 samples, 1.90%)</title><rect x="966.3" y="339.0" width="22.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="969.3" y="350.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/OutOfOrderCommitControl.complete (4 samples, 1.90%)</title><rect x="966.3" y="323.0" width="22.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="969.3" y="334.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isDebugEnabled (4 samples, 1.90%)</title><rect x="966.3" y="307.0" width="22.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="969.3" y="318.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isDebugEnabled (4 samples, 1.90%)</title><rect x="966.3" y="291.0" width="22.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.3" y="302.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callTurboFilters (4 samples, 1.90%)</title><rect x="966.3" y="275.0" width="22.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.3" y="286.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_0_3OrMore (4 samples, 1.90%)</title><rect x="966.3" y="259.0" width="22.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.3" y="270.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/Utils.timer (1 samples, 0.47%)</title><rect x="988.7" y="451.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="991.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.47%)</title><rect x="994.3" y="499.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="997.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.47%)</title><rect x="994.3" y="483.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="997.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.47%)</title><rect x="994.3" y="467.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="997.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.47%)</title><rect x="994.3" y="451.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="997.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.47%)</title><rect x="999.9" y="499.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1002.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.47%)</title><rect x="999.9" y="483.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1002.9" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/AbstractCoordinator$HeartbeatThread.run (1 samples, 0.47%)</title><rect x="1005.5" y="547.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1008.5" y="558.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.47%)</title><rect x="1005.5" y="531.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1008.5" y="542.0"></text>
</g>
<g>
<title>start_thread (32 samples, 15.17%)</title><rect x="1011.0" y="547.0" width="179.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1014.0" y="558.0">start_thread</text>
</g>
<g>
<title>java_start(Thread*) (32 samples, 15.17%)</title><rect x="1011.0" y="531.0" width="179.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1014.0" y="542.0">java_start(Thread*)</text>
</g>
<g>
<title>GangWorker::loop() (8 samples, 3.79%)</title><rect x="1011.0" y="515.0" width="44.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1014.0" y="526.0">Gang..</text>
</g>
<g>
<title>G1ParPreserveCMReferentsTask::work(unsigned int) (1 samples, 0.47%)</title><rect x="1011.0" y="499.0" width="5.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1014.0" y="510.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.47%)</title><rect x="1011.0" y="483.0" width="5.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1014.0" y="494.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.47%)</title><rect x="1011.0" y="467.0" width="5.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1014.0" y="478.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 3.32%)</title><rect x="1016.6" y="499.0" width="39.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1019.6" y="510.0">G1P..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 2.84%)</title><rect x="1016.6" y="483.0" width="33.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1019.6" y="494.0">G1..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (5 samples, 2.37%)</title><rect x="1016.6" y="467.0" width="28.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1019.6" y="478.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.95%)</title><rect x="1027.8" y="451.0" width="11.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1030.8" y="462.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (1 samples, 0.47%)</title><rect x="1039.0" y="451.0" width="5.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1042.0" y="462.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (1 samples, 0.47%)</title><rect x="1044.6" y="467.0" width="5.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1047.6" y="478.0"></text>
</g>
<g>
<title>G1RootProcessor::scan_remembered_sets(G1ParPushHeapRSClosure*, OopClosure*, unsigned int) (1 samples, 0.47%)</title><rect x="1050.2" y="483.0" width="5.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1053.2" y="494.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParPushHeapRSClosure*, CodeBlobClosure*, unsigned int) (1 samples, 0.47%)</title><rect x="1050.2" y="467.0" width="5.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1053.2" y="478.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, DirtyCardQueue*, bool, unsigned int) (1 samples, 0.47%)</title><rect x="1050.2" y="451.0" width="5.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1053.2" y="462.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, int, bool) (1 samples, 0.47%)</title><rect x="1050.2" y="435.0" width="5.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1053.2" y="446.0"></text>
</g>
<g>
<title>RefineRecordRefsIntoCSCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.47%)</title><rect x="1050.2" y="419.0" width="5.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1053.2" y="430.0"></text>
</g>
<g>
<title>G1RemSet::refine_card(signed char*, unsigned int, bool) (1 samples, 0.47%)</title><rect x="1050.2" y="403.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1053.2" y="414.0"></text>
</g>
<g>
<title>JavaThread::run() (24 samples, 11.37%)</title><rect x="1055.8" y="515.0" width="134.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1058.8" y="526.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (24 samples, 11.37%)</title><rect x="1055.8" y="499.0" width="134.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1058.8" y="510.0">JavaThread::threa..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (24 samples, 11.37%)</title><rect x="1055.8" y="483.0" width="134.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1058.8" y="494.0">CompileBroker::co..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (24 samples, 11.37%)</title><rect x="1055.8" y="467.0" width="134.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1058.8" y="478.0">CompileBroker::in..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (21 samples, 9.95%)</title><rect x="1055.8" y="451.0" width="117.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1058.8" y="462.0">C2Compiler::co..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (21 samples, 9.95%)</title><rect x="1055.8" y="435.0" width="117.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1058.8" y="446.0">Compile::Compi..</text>
</g>
<g>
<title>Compile::Code_Gen() (13 samples, 6.16%)</title><rect x="1055.8" y="419.0" width="72.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1058.8" y="430.0">Compile:..</text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.47%)</title><rect x="1055.8" y="403.0" width="5.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1058.8" y="414.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.47%)</title><rect x="1055.8" y="387.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1058.8" y="398.0"></text>
</g>
<g>
<title>Compile::init_scratch_buffer_blob(int) (1 samples, 0.47%)</title><rect x="1055.8" y="371.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1058.8" y="382.0"></text>
</g>
<g>
<title>BufferBlob::create(char const*, int) (1 samples, 0.47%)</title><rect x="1055.8" y="355.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1058.8" y="366.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (1 samples, 0.47%)</title><rect x="1055.8" y="339.0" width="5.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1058.8" y="350.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (1 samples, 0.47%)</title><rect x="1055.8" y="323.0" width="5.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1058.8" y="334.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (2 samples, 0.95%)</title><rect x="1061.4" y="403.0" width="11.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1064.4" y="414.0"></text>
</g>
<g>
<title>JVMState::same_calls_as(JVMState const*) const (1 samples, 0.47%)</title><rect x="1061.4" y="387.0" width="5.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1064.4" y="398.0"></text>
</g>
<g>
<title>string_equalsNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.47%)</title><rect x="1067.0" y="387.0" width="5.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1070.0" y="398.0"></text>
</g>
<g>
<title>MacroAssembler::char_arrays_equals(bool, RegisterImpl*, RegisterImpl*, RegisterImpl*, RegisterImpl*, RegisterImpl*, XMMRegisterImpl*, XMMRegisterImpl*) (1 samples, 0.47%)</title><rect x="1067.0" y="371.0" width="5.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1070.0" y="382.0"></text>
</g>
<g>
<title>Assembler::movzwl(RegisterImpl*, Address) (1 samples, 0.47%)</title><rect x="1067.0" y="355.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1070.0" y="366.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.95%)</title><rect x="1072.6" y="403.0" width="11.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1075.6" y="414.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.95%)</title><rect x="1072.6" y="387.0" width="11.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1075.6" y="398.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.47%)</title><rect x="1078.2" y="371.0" width="5.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1081.2" y="382.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.47%)</title><rect x="1078.2" y="355.0" width="5.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1081.2" y="366.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.47%)</title><rect x="1078.2" y="339.0" width="5.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1081.2" y="350.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (8 samples, 3.79%)</title><rect x="1083.7" y="403.0" width="44.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1086.7" y="414.0">Phas..</text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.47%)</title><rect x="1083.7" y="387.0" width="5.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1086.7" y="398.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.47%)</title><rect x="1083.7" y="371.0" width="5.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1086.7" y="382.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.47%)</title><rect x="1083.7" y="355.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1086.7" y="366.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.95%)</title><rect x="1089.3" y="387.0" width="11.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1092.3" y="398.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.47%)</title><rect x="1094.9" y="371.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1097.9" y="382.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (3 samples, 1.42%)</title><rect x="1100.5" y="387.0" width="16.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1103.5" y="398.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.47%)</title><rect x="1106.1" y="371.0" width="5.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1109.1" y="382.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.47%)</title><rect x="1111.7" y="371.0" width="5.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1114.7" y="382.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.47%)</title><rect x="1117.3" y="387.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1120.3" y="398.0"></text>
</g>
<g>
<title>__memset_sse2 (1 samples, 0.47%)</title><rect x="1122.9" y="387.0" width="5.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1125.9" y="398.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 2.37%)</title><rect x="1128.5" y="419.0" width="27.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1131.5" y="430.0">C..</text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.47%)</title><rect x="1128.5" y="403.0" width="5.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1131.5" y="414.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.47%)</title><rect x="1128.5" y="387.0" width="5.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1131.5" y="398.0"></text>
</g>
<g>
<title>ConnectionGraph::add_final_edges(Node*) (1 samples, 0.47%)</title><rect x="1128.5" y="371.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1131.5" y="382.0"></text>
</g>
<g>
<title>ConnectionGraph::process_call_arguments(CallNode*) (1 samples, 0.47%)</title><rect x="1128.5" y="355.0" width="5.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1131.5" y="366.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (1 samples, 0.47%)</title><rect x="1128.5" y="339.0" width="5.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1131.5" y="350.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.47%)</title><rect x="1128.5" y="323.0" width="5.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1131.5" y="334.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.47%)</title><rect x="1128.5" y="307.0" width="5.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1131.5" y="318.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (1 samples, 0.47%)</title><rect x="1128.5" y="291.0" width="5.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1131.5" y="302.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) (1 samples, 0.47%)</title><rect x="1128.5" y="275.0" width="5.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1131.5" y="286.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.47%)</title><rect x="1128.5" y="259.0" width="5.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1131.5" y="270.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.47%)</title><rect x="1128.5" y="243.0" width="5.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1131.5" y="254.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.47%)</title><rect x="1128.5" y="227.0" width="5.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1131.5" y="238.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.47%)</title><rect x="1128.5" y="211.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1131.5" y="222.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (3 samples, 1.42%)</title><rect x="1134.1" y="403.0" width="16.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1137.1" y="414.0"></text>
</g>
<g>
<title>NTarjan::COMPRESS() (1 samples, 0.47%)</title><rect x="1134.1" y="387.0" width="5.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1137.1" y="398.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (2 samples, 0.95%)</title><rect x="1139.7" y="387.0" width="11.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1142.7" y="398.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.47%)</title><rect x="1145.3" y="371.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.3" y="382.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.47%)</title><rect x="1150.9" y="403.0" width="5.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1153.9" y="414.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.47%)</title><rect x="1150.9" y="387.0" width="5.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.9" y="398.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.47%)</title><rect x="1150.9" y="371.0" width="5.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1153.9" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.95%)</title><rect x="1156.4" y="419.0" width="11.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1159.4" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.95%)</title><rect x="1156.4" y="403.0" width="11.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1159.4" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.95%)</title><rect x="1156.4" y="387.0" width="11.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1159.4" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.95%)</title><rect x="1156.4" y="371.0" width="11.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.4" y="382.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.47%)</title><rect x="1156.4" y="355.0" width="5.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1159.4" y="366.0"></text>
</g>
<g>
<title>Parse::catch_inline_exceptions(SafePointNode*) (1 samples, 0.47%)</title><rect x="1156.4" y="339.0" width="5.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1159.4" y="350.0"></text>
</g>
<g>
<title>GraphKit::gen_subtype_check(Node*, Node*) (1 samples, 0.47%)</title><rect x="1156.4" y="323.0" width="5.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1159.4" y="334.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.47%)</title><rect x="1156.4" y="307.0" width="5.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1159.4" y="318.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.47%)</title><rect x="1156.4" y="291.0" width="5.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.4" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.47%)</title><rect x="1162.0" y="355.0" width="5.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.0" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.47%)</title><rect x="1162.0" y="339.0" width="5.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.0" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.47%)</title><rect x="1162.0" y="323.0" width="5.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.0" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.47%)</title><rect x="1162.0" y="307.0" width="5.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.0" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.47%)</title><rect x="1162.0" y="291.0" width="5.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.0" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.47%)</title><rect x="1162.0" y="275.0" width="5.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.0" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.47%)</title><rect x="1162.0" y="259.0" width="5.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.0" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.47%)</title><rect x="1162.0" y="243.0" width="5.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1165.0" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.47%)</title><rect x="1162.0" y="227.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.0" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.47%)</title><rect x="1162.0" y="211.0" width="5.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.0" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.47%)</title><rect x="1162.0" y="195.0" width="5.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1165.0" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.47%)</title><rect x="1162.0" y="179.0" width="5.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.0" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.47%)</title><rect x="1162.0" y="163.0" width="5.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.0" y="174.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.47%)</title><rect x="1162.0" y="147.0" width="5.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.0" y="158.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.47%)</title><rect x="1162.0" y="131.0" width="5.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.0" y="142.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool) (1 samples, 0.47%)</title><rect x="1162.0" y="115.0" width="5.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.0" y="126.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency) (1 samples, 0.47%)</title><rect x="1162.0" y="99.0" width="5.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.0" y="110.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.47%)</title><rect x="1162.0" y="83.0" width="5.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.0" y="94.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.47%)</title><rect x="1162.0" y="67.0" width="5.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.0" y="78.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.47%)</title><rect x="1162.0" y="51.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.0" y="62.0"></text>
</g>
<g>
<title>TypeTuple::hash() const (1 samples, 0.47%)</title><rect x="1162.0" y="35.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.0" y="46.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (1 samples, 0.47%)</title><rect x="1167.6" y="419.0" width="5.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.6" y="430.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (1 samples, 0.47%)</title><rect x="1167.6" y="403.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.6" y="414.0"></text>
</g>
<g>
<title>InstanceKlass::add_dependent_nmethod(nmethod*) (1 samples, 0.47%)</title><rect x="1167.6" y="387.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1170.6" y="398.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (3 samples, 1.42%)</title><rect x="1173.2" y="451.0" width="16.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.2" y="462.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (3 samples, 1.42%)</title><rect x="1173.2" y="435.0" width="16.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.2" y="446.0"></text>
</g>
<g>
<title>Compilation::compile_method() (3 samples, 1.42%)</title><rect x="1173.2" y="419.0" width="16.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.2" y="430.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (3 samples, 1.42%)</title><rect x="1173.2" y="403.0" width="16.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.2" y="414.0"></text>
</g>
<g>
<title>Compilation::build_hir() (2 samples, 0.95%)</title><rect x="1173.2" y="387.0" width="11.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.2" y="398.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 0.95%)</title><rect x="1173.2" y="371.0" width="11.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1176.2" y="382.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 0.95%)</title><rect x="1173.2" y="355.0" width="11.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.2" y="366.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2 samples, 0.95%)</title><rect x="1173.2" y="339.0" width="11.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.2" y="350.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.95%)</title><rect x="1173.2" y="323.0" width="11.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.2" y="334.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.95%)</title><rect x="1173.2" y="307.0" width="11.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.2" y="318.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.95%)</title><rect x="1173.2" y="291.0" width="11.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.2" y="302.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.47%)</title><rect x="1173.2" y="275.0" width="5.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.2" y="286.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.47%)</title><rect x="1173.2" y="259.0" width="5.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.2" y="270.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.47%)</title><rect x="1173.2" y="243.0" width="5.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.2" y="254.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.47%)</title><rect x="1173.2" y="227.0" width="5.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.2" y="238.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.47%)</title><rect x="1173.2" y="211.0" width="5.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1176.2" y="222.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.47%)</title><rect x="1173.2" y="195.0" width="5.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.2" y="206.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.47%)</title><rect x="1173.2" y="179.0" width="5.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.2" y="190.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.47%)</title><rect x="1173.2" y="163.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.2" y="174.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.47%)</title><rect x="1173.2" y="147.0" width="5.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.2" y="158.0"></text>
</g>
<g>
<title>BitMap::BitMap(unsigned long, bool) (1 samples, 0.47%)</title><rect x="1173.2" y="131.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.2" y="142.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.47%)</title><rect x="1178.8" y="275.0" width="5.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.8" y="286.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.47%)</title><rect x="1178.8" y="259.0" width="5.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.8" y="270.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.47%)</title><rect x="1178.8" y="243.0" width="5.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.8" y="254.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(InstanceKlass*, InstanceKlass*, Symbol*, Symbol*, Bytecodes::Code) (1 samples, 0.47%)</title><rect x="1178.8" y="227.0" width="5.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.8" y="238.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(KlassHandle, Symbol*, Symbol*, KlassHandle, bool) (1 samples, 0.47%)</title><rect x="1178.8" y="211.0" width="5.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.8" y="222.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call(CallInfo&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, Thread*) (1 samples, 0.47%)</title><rect x="1178.8" y="195.0" width="5.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.8" y="206.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, Thread*) (1 samples, 0.47%)</title><rect x="1178.8" y="179.0" width="5.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.8" y="190.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.47%)</title><rect x="1178.8" y="163.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.8" y="174.0"></text>
</g>
<g>
<title>methodHandle::methodHandle(methodHandle const&amp;) (1 samples, 0.47%)</title><rect x="1178.8" y="147.0" width="5.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.8" y="158.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.47%)</title><rect x="1184.4" y="387.0" width="5.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.4" y="398.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.47%)</title><rect x="1184.4" y="371.0" width="5.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.4" y="382.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.47%)</title><rect x="1184.4" y="355.0" width="5.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.4" y="366.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(LIR_OpList*, IntervalWalker*) (1 samples, 0.47%)</title><rect x="1184.4" y="339.0" width="5.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.4" y="350.0"></text>
</g>
</g>
</svg>
